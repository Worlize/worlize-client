<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				autoDrawBackground="true"
				dataChange="handleDataChange(event)"
				initialize="handleInitialize(event)" xmlns:friends="com.worlize.view.itemrenderers.friends.*">
	
	<s:states>
		<s:State name="over" id="over" />
		<s:State name="up" id="up" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import com.worlize.interactivity.rpc.InteractivityClient;
			import com.worlize.model.FriendsList;
			import com.worlize.model.FriendsListEntry;
			
			import flash.net.navigateToURL;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			
			[Bindable]
			private var client:InteractivityClient = InteractivityClient.getInstance();
			
			[Bindable]
			private var buttonLabel:String;
			
			private var onlineWatcher:ChangeWatcher;
			private var menu:Menu;
			
			
			private function handleInitialize(event:Event):void {
				onlineWatcher = ChangeWatcher.watch(this, ['data','online'], handleOnlineStatusChange);
			}
			
			private function handleDataChange(event:FlexEvent):void {
				if (data === null) { return; }
				updateMenu();
				updateOnlineStatus();
			}
			
			private function updateOnlineStatus():void {
				if (data === null) { return; }
				if (data is FriendsListEntry && (data as FriendsListEntry).online) {
					buttonLabel = "Join";
				}
				else {
					buttonLabel = "Visit Worlz";
				}
			}
			
			private function handleOnlineStatusChange(event:Event):void {
				updateOnlineStatus();
			}
			
			private function visitWorlz():void {
				client.gotoRoom((data as FriendsListEntry).worldEntrance);
			}
			
			private function updateMenu():void {
				if (menu) {
					menu.removeEventListener(MenuEvent.ITEM_CLICK, handleMenuItemClick);
				}	
				var entry:FriendsListEntry = data as FriendsListEntry;
				var menuData:Array = [];
				if (entry.online) {
					menuData.push({ type: 'normal', label: 'Go to Current Location', action: 'join' });
					menuData.push({ type: 'normal', label: 'Invite to Your Location', action: 'invite' });
				}
				menuData.push({ type: 'normal', label: 'Go to Worlz', action: 'visitWorlz' });
				if (entry.facebookProfile) {
					menuData.push({ type: 'normal', label: 'View Facebook Profile', action: 'facebookProfile' });
				}
				if (entry.twitterProfile) {
					menuData.push({ type: 'normal', label: 'View Twitter Profile', action: 'twitterProfile' });
				}
				if (entry.friendType === FriendsListEntry.TYPE_WORLIZE) {
					menuData.push({ type: 'normal', label: 'Remove Friend', action: 'unfriend' });
				}
				
				menu = Menu.createMenu(null, menuData, true);
				menu.addEventListener(MenuEvent.ITEM_CLICK, handleMenuItemClick);
				popUpButton.popUp = menu;
			}
			
			private function handleMenuItemClick(event:MenuEvent):void {
				if (!event.item || !event.item.action) { return; }
				switch (event.item.action) {
					case "join":
						visitFriend();
						break;
					case "visitWorlz":
						visitWorlz();
						break;
					case "twitterProfile":
						viewTwitterProfile();
						break;
					case "facebookProfile":
						viewFacebookProfile();
						break;
					case "invite":
						inviteFriend();
						break;
					case "requestToJoin":
						requestToJoin();
						break;
					case "unfriend":
						unfriend();
						break;
					default:
						break;
				}
			}
			
			private function handleActionButtonClick():void {
				if ((data as FriendsListEntry).online) {
					visitFriend();
				}
				else {
					visitWorlz();
				}
			}
			
			private function visitFriend():void {
				client.gotoRoom((data as FriendsListEntry).currentRoomGuid);
			}
			
			private function viewTwitterProfile():void {
				var r:URLRequest = new URLRequest((data as FriendsListEntry).twitterProfile);
				navigateToURL(r, '_blank');
			}
			
			private function viewFacebookProfile():void {
				var r:URLRequest = new URLRequest((data as FriendsListEntry).facebookProfile);
				navigateToURL(r, '_blank');
			}
			
			private function inviteFriend():void {
				(data as FriendsListEntry).invite();
			}
			
			private function requestToJoin():void {
				(data as FriendsListEntry).requestToJoin();
			}
			
			private function unfriend():void {
				var entry:FriendsListEntry = data as FriendsListEntry;
				Alert.show("Are you sure you want to remove " + entry.username + " from your friends list?",
						   "Unfriend " + entry.username,
						   Alert.YES | Alert.NO,
						   null,
						   function(event:CloseEvent):void {
							   if (event.detail == Alert.YES) {
								   entry.unfriend();
							   }
						   }
				);
			}
		]]>
	</fx:Script>
	<!--
	<s:Rect left="0" right="0" bottom="0" top="0">
		<s:fill>
			<s:SolidColor color="#FFFFFF" />	
		</s:fill>
	</s:Rect>
	-->
	
	<s:HGroup left="0" right="3" top="0" bottom="0" verticalAlign="middle">

		<friends:FriendItemRenderer data="{data}" width="100%" />
		
		<mx:PopUpButton id="popUpButton" label="{buttonLabel}"
						click="handleActionButtonClick()" />
	</s:HGroup>
	
				
	
</s:ItemRenderer>
