<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				height="47" autoDrawBackground="false">
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import com.worlize.interactivity.rpc.InteractivityClient;
			import com.worlize.model.FriendsList;
			import com.worlize.model.FriendsListEntry;
			import com.worlize.view.windows.FriendsWindow;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			
			[Bindable]
			private var client:InteractivityClient = InteractivityClient.getInstance();
			
			[Bindable]
			private var _data:FriendsListEntry;
			
			[Bindable(event='dataChange')]
			override public function set data(newValue:Object):void {
				if (_data !== newValue) {
					if (newValue is FriendsListEntry) {
						_data = FriendsListEntry(newValue);
						updateMenu();
					}
					else {
						_data = null;
					}
					dispatchEvent(new FlexEvent('dataChange'));
				}
			}
			override public function get data():Object {
				return _data;
			}
			
			private function visitFriend(data:FriendsListEntry):void {
				client.gotoRoom(data.worldEntrance);
				FriendsWindow.close();
			}
			
			private var menu:Menu;
			
			private function updateMenu():void {
				if (menu) {
					menu.removeEventListener(MenuEvent.ITEM_CLICK, handleMenuItemClick);
				}	
				var menuData:Array = [];
				if (_data.online) {
					menuData.push({ type: 'normal', label: 'Invite ' + _data.username + ' to join you', action: 'invite' });
					menuData.push({ type: 'normal', label: 'Request permission to join ' + _data.username, action: 'requestToJoin' });
					menuData.push({ type: 'separator' });
				}
				menuData.push({ type: 'normal', label: 'Remove Friend', action: 'unfriend' });
				
				menu = Menu.createMenu(null, menuData, true);
				menu.addEventListener(MenuEvent.ITEM_CLICK, handleMenuItemClick);
				popUpButton.popUp = menu;
			}
			
			private function handleMenuItemClick(event:MenuEvent):void {
				if (!event.item || !event.item.action) { return; }
				switch (event.item.action) {
					case "invite":
						inviteFriend();
						break;
					case "requestToJoin":
						requestToJoin();
						break;
					case "unfriend":
						unfriend();
						break;
					default:
						break;
				}
			}
			
			private function inviteFriend():void {
				_data.invite();
			}
			
			private function requestToJoin():void {
				_data.requestToJoin();
			}
			
			private function unfriend():void {
				FriendsWindow.lockOpen();
				Alert.show("Are you sure you want to remove " + _data.username + " from your friends list?",
						   "Unfriend " + _data.username,
						   Alert.YES | Alert.NO,
						   null,
						   function(event:CloseEvent):void {
							   if (event.detail == Alert.YES) {
								   _data.unfriend();
							   }
							   FriendsWindow.releaseLock();
						   }
				);
			}
		]]>
	</fx:Script>
	
	<s:Rect left="0" right="0" bottom="0" top="0">
		<s:fill>
			<s:SolidColor color="#FFFFFF" />	
		</s:fill>
	</s:Rect>
	
	<s:Rect width="42" height="42"
			top="2" left="2">
		<s:stroke>
			<s:SolidColorStroke color="#666666" weight="1" joints="miter" caps="square" />
		</s:stroke>
		<s:fill>
			<s:SolidColor color="#F0F0F0" />
		</s:fill>
	</s:Rect>
	
	<mx:Image width="40" height="40" top="3" left="3" 
			  source="@Embed(source='src/assets/icons/unknown_user.png')" />
	
	
	<!-- In this circumstance we can't use the visible property because of a
	     Flex bug.  The item renderer has its data property set to null when
	     it's being recycled, which happens when the renderer is not on the
	     stage.  Changing the visibility depends on the component having an
	     active reference to the stage
	-->
	<mx:Image id="onlineDot" left="48" verticalCenter="0" width="13" height="13"
			  alpha="{_data.online ? 1.0 : 0.0}"
			  source="@Embed(source='src/assets/icons/dot-online.png')" />
	
	<mx:Image id="offlineDot" left="48" verticalCenter="0" width="13" height="13"
			  alpha="{_data.online ? 0.0 : 1.0}"
			  source="@Embed(source='src/assets/icons/dot-offline.png')" />
	
	
	<s:HGroup left="68" right="3" verticalCenter="0" verticalAlign="middle">
		<s:Label fontFamily="Arial" width="100%"
				 text="{_data.username}" />

		<mx:PopUpButton id="popUpButton" label="Visit Worlz"
						click="visitFriend(_data)" />
				
	</s:HGroup>
	
				
	
</s:ItemRenderer>
