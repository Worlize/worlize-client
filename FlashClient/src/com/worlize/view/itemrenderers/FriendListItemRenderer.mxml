<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				height="57" autoDrawBackground="false"
				dataChange="handleDataChange(event)"
				initialize="handleInitialize(event)">
	
	<s:states>
		<s:State name="worlize" stateGroups="offline,worlize_friend" />
		<s:State name="facebook" stateGroups="offline,facebook_friend" />
		<s:State name="worlize_online" stateGroups="online,worlize_friend" />
		<s:State name="facebook_online" stateGroups="online,facebook_friend" />
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import com.worlize.interactivity.rpc.InteractivityClient;
			import com.worlize.model.FriendsList;
			import com.worlize.model.FriendsListEntry;
			import com.worlize.view.windows.FriendsWindow;
			
			import flash.net.navigateToURL;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			
			[Bindable]
			private var client:InteractivityClient = InteractivityClient.getInstance();
			
			private var onlineWatcher:ChangeWatcher;
			
			[Bindable]
			private var buttonLabel:String;
			
			private function handleInitialize(event:Event):void {
				onlineWatcher = ChangeWatcher.watch(this, ['data','online'], handleOnlineStatusChange);
			}
			
			private function handleDataChange(event:FlexEvent):void {
				if (data === null) { return; }
				updateMenu();
				updateState();
				if ((data as FriendsListEntry).online) {
					buttonLabel = "Join";
				}
				else {
					buttonLabel = "Visit Worlz";
				}
			}
			
			private function handleOnlineStatusChange(event:Event):void {
				if (data === null) { return; }
				updateState();
			}
			
			private function updateState():void {
				var entry:FriendsListEntry = data as FriendsListEntry;
				var state:String = entry.friendType;
				if (entry.online) {
					state += "_online";
				}
				currentState = state;
			}
			
			private function visitWorlz():void {
				client.gotoRoom((data as FriendsListEntry).worldEntrance);
				FriendsWindow.close();
			}
			
			private var menu:Menu;
			
			private function updateMenu():void {
				if (menu) {
					menu.removeEventListener(MenuEvent.ITEM_CLICK, handleMenuItemClick);
				}	
				var entry:FriendsListEntry = data as FriendsListEntry;
				var menuData:Array = [];
				if (entry.online) {
					menuData.push({ type: 'normal', label: 'Go to Current Location', action: 'join' });
					menuData.push({ type: 'normal', label: 'Invite to Your Location', action: 'invite' });
				}
				menuData.push({ type: 'normal', label: 'Go to Worlz', action: 'visitWorlz' });
				if (entry.facebookProfile) {
					menuData.push({ type: 'normal', label: 'View Facebook Profile', action: 'facebookProfile' });
				}
				if (entry.twitterProfile) {
					menuData.push({ type: 'normal', label: 'View Twitter Profile', action: 'twitterProfile' });
				}
				if (entry.friendType === FriendsListEntry.TYPE_WORLIZE) {
					menuData.push({ type: 'normal', label: 'Remove Friend', action: 'unfriend' });
				}
				
				menu = Menu.createMenu(null, menuData, true);
				menu.addEventListener(MenuEvent.ITEM_CLICK, handleMenuItemClick);
				popUpButton.popUp = menu;
			}
			
			private function handleMenuItemClick(event:MenuEvent):void {
				if (!event.item || !event.item.action) { return; }
				switch (event.item.action) {
					case "join":
						visitFriend();
						break;
					case "visitWorlz":
						visitWorlz();
						break;
					case "twitterProfile":
						viewTwitterProfile();
						break;
					case "facebookProfile":
						viewFacebookProfile();
						break;
					case "invite":
						inviteFriend();
						break;
					case "requestToJoin":
						requestToJoin();
						break;
					case "unfriend":
						unfriend();
						break;
					default:
						break;
				}
			}
			
			private function handleActionButtonClick():void {
				if ((data as FriendsListEntry).online) {
					visitFriend();
				}
				else {
					visitWorlz();
				}
			}
			
			private function visitFriend():void {
				client.gotoRoom((data as FriendsListEntry).currentRoomGuid);
			}
			
			private function viewTwitterProfile():void {
				var r:URLRequest = new URLRequest((data as FriendsListEntry).twitterProfile);
				navigateToURL(r, '_blank');
			}
			
			private function viewFacebookProfile():void {
				var r:URLRequest = new URLRequest((data as FriendsListEntry).facebookProfile);
				navigateToURL(r, '_blank');
			}
			
			private function inviteFriend():void {
				(data as FriendsListEntry).invite();
			}
			
			private function requestToJoin():void {
				(data as FriendsListEntry).requestToJoin();
			}
			
			private function unfriend():void {
				FriendsWindow.lockOpen();
				var entry:FriendsListEntry = data as FriendsListEntry;
				Alert.show("Are you sure you want to remove " + entry.username + " from your friends list?",
						   "Unfriend " + entry.username,
						   Alert.YES | Alert.NO,
						   null,
						   function(event:CloseEvent):void {
							   if (event.detail == Alert.YES) {
								   entry.unfriend();
							   }
							   FriendsWindow.releaseLock();
						   }
				);
			}
		]]>
	</fx:Script>
	
	<s:Rect left="0" right="0" bottom="0" top="0">
		<s:fill>
			<s:SolidColor color="#FFFFFF" />	
		</s:fill>
	</s:Rect>
	
	<s:Group id="profilePictureArea" width="52" height="52"
			 top="2" left="2">
		
		<s:Rect width="51" height="51"
				top="0" left="0">
			<s:stroke>
				<s:SolidColorStroke color="#c3c3c3" weight="1" pixelHinting="true" />
			</s:stroke>
			<s:fill>
				<s:SolidColor color="#eeeeee" />
			</s:fill>
		</s:Rect>
		
		<s:Image width="50" height="50" top="1" left="1"
				 source="{data.picture}" />
		
		<s:Image width="16" height="16" left="0" bottom="0"
				 source="@Embed(source='src/assets/icons/social/fb-16.png')"
				 includeIn="facebook_friend" />
		
		<s:Rect includeIn="online" id="onlineStatusJewel"
				width="6" height="6" bottom="2" right="2">
			<s:stroke>
				<s:SolidColorStroke color="#000000" />
			</s:stroke>
			<s:fill>
				<s:SolidColor color="#45e200" />
			</s:fill>
		</s:Rect>
		
	</s:Group>
	
	<s:HGroup left="58" right="3" top="5" bottom="3" verticalAlign="middle">
		<s:VGroup width="100%" height="100%">
			<!-- Facebook Real Name -->
			<s:Label styleName="friendListFullName"
					 includeIn="facebook_friend"
					 width="100%"
					 text="{data.name}" />
			
			<!-- Worlize Username -->
			<s:Label styleName="friendListUserName"
					 width="100%"
					 fontWeight.worlize_friend="bold"
					 fontWeight.facebook_friend="normal"
					 text="{data.username}" />
			
			<!-- Online Status -->
			<s:Label styleName="friendListOnlineStatus"
					 width="100%"
					 includeIn="online"
					 text="(Online)" />
		</s:VGroup>

		<mx:PopUpButton id="popUpButton" label="{buttonLabel}"
						click="handleActionButtonClick()" />
	</s:HGroup>
	
				
	
</s:ItemRenderer>
