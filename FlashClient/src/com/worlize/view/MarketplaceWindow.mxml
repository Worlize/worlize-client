<?xml version="1.0" encoding="utf-8"?>
<components:WorlizeWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
						  xmlns:s="library://ns.adobe.com/flex/spark" 
						  xmlns:mx="library://ns.adobe.com/flex/mx"
						  xmlns:components="com.worlize.view.components.*"
						  title="Marketplace"
						  titleBarColor="#ffbb00" titleTextColor="#b68b0b" 
						  windowIcon="@Embed('assets/icons/large/w_icon_marketplace.png')"
						  minWidth="600" minHeight="340"
						  creationComplete="handleCreationComplete()"
						  width="600" height="430" xmlns:marketplace="com.worlize.view.marketplace.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.worlize.model.PreferencesManager;
			import com.worlize.model.WorlizeAssetKind;
			import com.worlize.model.marketplace.MarketplaceSearch;
			
			import flex.utils.spark.resize.ResizeManager;
			
			import mx.events.CloseEvent;
			import mx.events.ResizeEvent;
			import mx.graphics.SolidColor;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;
			
			import spark.events.TitleWindowBoundsEvent;
			import spark.primitives.Rect;
			private static var _open:Boolean = false;
			private static var _instance:MarketplaceWindow;
			
			public static function toggleOpen(parent:DisplayObject):void {
				if (_open) {
					close();
				}
				else {
					open(parent);
				}
			}	
			
			public static function open(parent:DisplayObject):void {
				var preferences:PreferencesManager = PreferencesManager.getInstance();
				if (_open) {
					PopUpManager.bringToFront(_instance);
					_instance.setFocus();
				}
				else {
					var needsPosition:Boolean = false;
					if (!_instance) {
						needsPosition = true;
						_instance = new MarketplaceWindow();
						_instance.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
							close();
						});
					}
					PopUpManager.addPopUp(_instance, parent);
					if (needsPosition) {
						var coordinates:Array = preferences.getPreference('marketplacePosition') as Array;
						var size:Array = preferences.getPreference('marketplaceSize') as Array;
						if (coordinates && size &&
							_instance.boundsAreValid(coordinates[0], coordinates[1], size[0], size[1]))
						{
							_instance.x = coordinates[0];
							_instance.y = coordinates[1];
							_instance.width = size[0];
							_instance.height = size[1];
						}
						else {
							PopUpManager.centerPopUp(_instance);
						}
					}
					_open = true;
				}
			}
			
			private function saveSizeAndPosition():void {
				var preferences:PreferencesManager = PreferencesManager.getInstance();
				preferences.setPreference('marketplacePosition', [x,y]);
				preferences.setPreference('marketplaceSize', [width, height]);
			}
			
			public static function close():void {
				if (_open && _instance) {
					PopUpManager.removePopUp(_instance);
					_open = false;
				}
			}
			
			[Bindable]
			private var searchModel:MarketplaceSearch = new MarketplaceSearch();
			
			private var searchTimer:Timer = new Timer(250, 1);
			
			private function handleCreationComplete():void {
				searchTimer.addEventListener(TimerEvent.TIMER, handleSearch);
				searchModel.search("featured", WorlizeAssetKind.BACKGROUND);
				
				addEventListener(ResizeManager.RESIZE_END, function(event:ResizeEvent):void {
					saveSizeAndPosition();
				});
				addEventListener(TitleWindowBoundsEvent.WINDOW_MOVE_END, function(event:TitleWindowBoundsEvent):void {
					saveSizeAndPosition();
				});
			}

			private function handleSearch(event:TimerEvent):void {
				searchModel.search(searchField.text, WorlizeAssetKind.BACKGROUND);
			}
			
			private function handleSearchKeyDown(event:KeyboardEvent):void {
				searchTimer.stop();
				searchTimer.reset();
				searchTimer.start();
			}
		]]>
	</fx:Script>
	
	<components:controlBarContent>
		<s:HGroup gap="3" verticalAlign="middle" mouseEnabled="false">
			<mx:Image source="@Embed(source='src/assets/icons/icon_author_bkg.png')" mouseEnabled="false" />
			<s:Label text="Backgrounds" color="#962626" mouseEnabled="false"
					 fontFamily="Tuffy" fontWeight="bold" fontSize="14" />
		</s:HGroup>
		<components:CapacityButton line1="Coins: 24239" line2="Bucks: 5" />
	</components:controlBarContent>

	<marketplace:MarketplacePreviewPane id="previewPane"
										dataProvider="{searchResults.selectedItem}"
										top="10" left="10" width="200" bottom="10" />
	
	<s:VGroup top="10" left="230" right="10" bottom="10" gap="20">
		<s:HGroup width="100%" horizontalAlign="right" verticalAlign="middle">
			<s:Label text="search:" color="#c8b276" />
			<s:TextInput id="searchField" keyDown="handleSearchKeyDown(event)" borderVisible="false" width="200" />
		</s:HGroup>
		<marketplace:MarketplaceSearchResults id="searchResults"
											  width="100%" height="100%"
											  search="{searchModel}" />
	</s:VGroup>
	
</components:WorlizeWindow>
