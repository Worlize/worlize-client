<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="21" minHeight="21" alpha.componentDisabled="0.5">
    <fx:Metadata>[HostComponent("com.worlize.view.components.NotificationBadgeLinkButton")]</fx:Metadata>
    
    <!-- host component -->
    <fx:Script fb:purpose="styling">
        <![CDATA[         
            /* Define the skin elements that should not be colorized. 
            For button, the graphics are colorized but the label is not. */
            static private const exclusions:Array = ["labelDisplay"];
            
            /** 
             * @private
             */     
            override public function get colorizeExclusions():Array {return exclusions;}
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }  
            
            /**
             *  @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
            {
                var cr:Number = getStyle("cornerRadius");
                
                if (cornerRadius != cr)
                {
                    cornerRadius = cr;
                }
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
            
			[Bindable]
            private var cornerRadius:Number = 2;
        ]]>        
    </fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" stateGroups="normal" />
        <s:State name="over" stateGroups="hover" />
        <s:State name="down" stateGroups="pressed" />
        <s:State name="disabled" stateGroups="componentDisabled" />
		<s:State name="upWithBadge" stateGroups="normal,withBadge" />
		<s:State name="overWithBadge" stateGroups="hover,withBadge" />
		<s:State name="downWithBadge" stateGroups="pressed,withBadge" />
		<s:State name="disabledWithBadge" stateGroups="componentDisabled,withBadge" />
    </s:states>
    
	<!-- layer 1: background -->
	<s:Rect top="0" left="0" right="0" bottom="0"
			radiusX="{cornerRadius}"
			id="backgroundFill">
		<s:fill>
			<s:SolidColor color.normal="{getStyle('backgroundColor')}"
						  color.hover="{getStyle('backgroundOverColor')}"
						  color.pressed="{getStyle('backgroundDownColor')}"
						  color.componentDisabled="{getStyle('backgroundDisabledColor')}" />
		</s:fill>
	</s:Rect>
    
    <!-- layer 2: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
    <s:Label id="labelDisplay"
             textAlign="center"
             verticalAlign="middle"
             maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="1"
             left="10" right="10" top="2" bottom="2">
    </s:Label>
	
	<s:Group bottom="-3" right="-4" includeIn="withBadge"
			 mouseEnabled="false" mouseChildren="false">
		<s:Rect top="0" left="0" right="0" bottom="0" radiusX="{getStyle('badgeBorderRadius')}">
			<s:fill>
				<s:SolidColor color="{getStyle('badgeBackgroundColor')}"
							  color.hover="{getStyle('badgeBackgroundOverColor')}"
							  color.pressed="{getStyle('badgeBackgroundDownColor')}"
							  color.componentDisabled="{getStyle('badgeBackgroundDisabledColor')}" />
			</s:fill>
		</s:Rect>
		<s:Label id="badgeNumberDisplay"
				 mouseEnabled="false" mouseChildren="false"
				 top="3" left="3" right="3" bottom="0"
				 fontSize="12"
				 fontFamily="Arial" fontWeight="bold"
				 color="{getStyle('badgeTextColor')}"
				 color.hover="{getStyle('badgeTextOverColor')}"
				 color.pressed="{getStyle('badgeTextDownColor')}"
				 color.componentDisabled="{getStyle('badgeTextDisabledColor')}"
				 text="{hostComponent.badgeNumber}" />
	</s:Group>
    
</s:SparkSkin>
