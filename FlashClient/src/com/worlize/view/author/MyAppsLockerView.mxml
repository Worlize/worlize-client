<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:components="com.worlize.view.components.*"
		  xmlns:controls="controls.*"
		  currentState="init"
		  creationComplete="handleCreationComplete()"
		  gap="0">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.worlize.control.AppUploader;
			import com.worlize.control.Uploader;
			import com.worlize.event.NotificationCenter;
			import com.worlize.model.CurrentUser;
			import com.worlize.model.PreferencesManager;
			import com.worlize.model.locker.AppLocker;
			import com.worlize.view.windows.BuyStorageSpaceWindow;
			
			import flex.utils.spark.resize.ResizeManager;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.MoveEvent;
			import mx.events.ResizeEvent;
			import mx.graphics.SolidColor;
			import mx.managers.PopUpManager;
			import mx.managers.SystemManager;
			
			import spark.events.TitleWindowBoundsEvent;
			import spark.primitives.Rect;
			
			[Bindable]
			private var appLocker:AppLocker = new AppLocker();
			
			[Bindable]
			private var uploader:Uploader = new AppUploader();
			
			private var stateWatcher:ChangeWatcher;
			
			private function handleCreationComplete():void {
				stateWatcher = ChangeWatcher.watch(appLocker, ['state'], handleLockerStateChange);
				appLocker.load();
			}
			
			private function handleLockerStateChange(event:Event):void {
				switch (appLocker.state) {
					case AppLocker.STATE_ERROR:
						currentState = "loadError";
						break;
					case AppLocker.STATE_INIT:
						currentState = "init";
						break;
					case AppLocker.STATE_LOADING:
						currentState = "loading";
						break;
					case AppLocker.STATE_READY:
						currentState = "ready";
						break;
				}
			}
			
			private function uploadApp():void {
				uploader.browse();
			}
		]]>
	</fx:Script>
	
	<!--
	<components:controlBarContent>
	<mx:LinkButton
	id="uploadButton"
	click="uploadObject()"
	enabled="{uploader.state == Uploader.STATE_READY}"
	styleName="lockerNavButton"
	color="#2b9610"
	icon="@Embed(source='src/assets/icons/icon_upload.png')"
	label="Upload" />
	
	<components:CapacityButton
	click="showBuySlotsWindow()"
	line1="Capacity: {CurrentUser.getInstance().slots.inWorldObjectSlots}"
	line2="Used: {inWorldObjectLocker.count}"
	toolTip="Click to buy more locker space"/>
	</components:controlBarContent>
	-->
	
	<s:states>
		<s:State name="init" />
		<s:State name="loading" />
		<s:State name="loadError" />
		<s:State name="ready" />
	</s:states>
	
	<s:Group width="100%" height="100%">
		<s:List width="100%" height="100%"
				includeIn="ready"
				id="appList" dataProvider="{appLocker.entries}"
				borderVisible="false"
				horizontalScrollPolicy="off"
				itemRenderer="com.worlize.view.itemrenderers.AppLockerItemRenderer">
			<s:layout>
				<s:VerticalLayout paddingTop="5" paddingBottom="5" gap="10" />
			</s:layout>
		</s:List>
		
		<s:Group width="100%" height="100%" includeIn="loading">
			<controls:Spinner id="loadingSpinner"
							  autoPlay="true"
							  mouseEnabled="false"
							  mouseChildren="false"
							  size="44" numTicks="13"
							  tickWidth="3" speed="600"
							  horizontalCenter="0"
							  top="30"
							  fadeSpeed="500" tickColor="#222222" />
		</s:Group>
		
		<s:VGroup width="100%" height="100%" includeIn="loadError"
				  horizontalAlign="center" verticalAlign="middle">
			<s:Label fontSize="18" fontFamily="PTSansNarrow"
					 text="Unable to load apps." />
			<s:Button label="Retry" click="appLocker.load()" />
		</s:VGroup>
	</s:Group>
	
	<s:Group width="100%">
		<s:Rect bottom="0" right="0" top="0" left="0">
			<s:fill>
				<s:SolidColor color="#EEEEEE" />
			</s:fill>
		</s:Rect>
		<s:Rect top="0" width="100%" height="1">
			<s:fill>
				<s:SolidColor color="#BBBBBB" />
			</s:fill>
		</s:Rect>
		<s:HGroup horizontalAlign="right" verticalAlign="middle"
				  width="100%"
				  paddingTop="6" paddingRight="15" paddingBottom="5">
			<components:UploadProgressIndicator
				uploader="{uploader}" />
			
			<mx:LinkButton
				id="uploadButton"
				click="uploadApp()"
				enabled="{CurrentUser.getInstance().developer &amp;&amp; uploader.state === Uploader.STATE_READY &amp;&amp; appLocker.state === AppLocker.STATE_READY}"
				styleName="lockerNavButton"
				color="#2b9610"
				icon="@Embed(source='src/assets/icons/icon_upload.png')"
				toolTip="Click to upload a new App"
				label="Upload" />
		</s:HGroup>
	</s:Group>
	
</s:VGroup>
