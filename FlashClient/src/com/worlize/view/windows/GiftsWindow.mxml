<?xml version="1.0" encoding="utf-8"?>
<components:WorlizeFloatingPanel xmlns:fx="http://ns.adobe.com/mxml/2009" 
								 xmlns:s="library://ns.adobe.com/flex/spark" 
								 xmlns:mx="library://ns.adobe.com/flex/mx"
								 xmlns:components="com.worlize.view.components.*"
								 titleBarColor="#b6578a"
								 showTitle="false"
								 showCloseButton="false"
								 removedFromStage="handleRemovedFromStage()"
								 mouseDownOutside="handleMouseDownOutside(event)"
								 width="380" xmlns:layout="flexlib.scheduling.scheduleClasses.layout.*" xmlns:controls="controls.*">
	
	<fx:Script>
		<![CDATA[
			import com.worlize.model.gifts.GiftsList;
			import com.worlize.view.itemrenderers.GiftsListItemRenderer;
			
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.states.State;
			
			private var _giftsList:GiftsList;
			
			[Bindable(event="giftsListChange")]
			public function set giftsList(newValue:GiftsList):void {
				if (_giftsList !== newValue) {
					if (_giftsList) {
						_giftsList.removeEventListener('stateChange', handleGiftsListStateChange);
					}
					_giftsList = newValue;
					if (_giftsList) {
						_giftsList.addEventListener('stateChange', handleGiftsListStateChange);
						if (giftsList.state == GiftsList.STATE_LOADING) {
							loadingSpinner.visible = true;
							loadingSpinner.play();
						}
					}
					dispatchEvent(new FlexEvent("giftsListChange"));
				}
			}
			public function get giftsList():GiftsList {
				return _giftsList;
			}
			
			private static var _open:Boolean = false;
			private static var _instance:GiftsWindow;
			private static var closedAt:Date;
			
			private function handleGiftsListStateChange(event:Event):void {
				if (giftsList.state == GiftsList.STATE_LOADING) {
					loadingSpinner.play();
					loadingSpinner.visible = true;
				}
				else {
					loadingSpinner.stop();
					loadingSpinner.visible = false;
				}
			}
			
			private function handleRemovedFromStage():void {
				loadingSpinner.visible = false;
				loadingSpinner.stop();
			}
			
			public static function get isOpen():Boolean {
				return _open;
			}

			private static var lockCounter:int = 0;
			public static function lockOpen():void {
				lockCounter ++;
			}
			
			public static function releaseLock():void {
				lockCounter --;
			}
			
			public static function isLocked():Boolean {
				return lockCounter > 0;
			}
			
			private function handleMouseDownOutside(event:MouseEvent):void {
				close();
			}

			public static function open(parent:DisplayObject, x:int=395, y:int=30):void {
				if (closedAt && closedAt.valueOf() > (new Date()).valueOf() - 200) {
					return;
				}
				
				if (_open) {
					PopUpManager.bringToFront(_instance);
					_instance.setFocus();
				}
				else {
					_instance = new GiftsWindow();
					_instance.addEventListener(CloseEvent.CLOSE, function(event:CloseEvent):void {
						close();
					});
					PopUpManager.addPopUp(_instance, parent);
					_instance.giftsList = GiftsList.getInstance();
					_instance.x = x;
					_instance.y = y;
					_open = true;
				}
			}
			
			public static function close():void {
				if (_open && _instance && lockCounter <= 0) {
					lockCounter = 0;
					_instance.giftsList.prune();
					_instance.giftsList = null;
					PopUpManager.removePopUp(_instance);
					_open = false;
					_instance = null;
					closedAt = new Date();
				}
			}


		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup gap="0" width="100%">
		<s:Group width="100%">
			<s:Rect top="0" left="0" right="0" bottom="0">
				<s:fill>
					<s:SolidColor color="#e8c2d6" />
				</s:fill>
			</s:Rect>
			<s:Label left="6" top="8" bottom="6"
					 fontFamily="PTSansNarrowBold"
					 fontSize="14" color="#000000"
					 text="Gifts" />
			<controls:Spinner id="loadingSpinner"
							  right="5" verticalCenter="0"
							  visible="false"
							  autoPlay="false"
							  mouseEnabled="false"
							  mouseChildren="false"
							  size="19" numTicks="9"
							  tickWidth="2" speed="600"
							  fadeSpeed="600" tickColor="#444444" />
		</s:Group>

		<s:VGroup width="100%" height="100"
				  visible="{giftsList.giftsList.length == 0}"
				  includeInLayout="{giftsList.giftsList.length == 0}"
				  verticalAlign="middle"
				  horizontalAlign="center">
			<s:Label fontFamily="PTSansNarrowBold"
					 fontSize="18"
					 color="#555555"
					 text="You have no gifts" />
			<s:Label fontFamily="Arial"
					 fontSize="11"
					 fontStyle="italic"
					 color="#666666"
					 text="(Ask your friends to send you some!)" />
		</s:VGroup>
		
		<components:DynamicHeightList
			width="100%"
			focusEnabled="false"
			visible="{giftsList.giftsList.length > 0}"
			includeInLayout="{giftsList.giftsList.length > 0}"
			dataProvider="{giftsList.giftsList}"
			maxRowCount="8"
			borderVisible="false"
			itemRenderer="com.worlize.view.itemrenderers.GiftsListItemRenderer" />

	</s:VGroup>
	
</components:WorlizeFloatingPanel>
